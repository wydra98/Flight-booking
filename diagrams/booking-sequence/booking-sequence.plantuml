@startuml sequence
actor Client as John
control TripController
database RouteRepository order 30
database TripsRepository order 40

John -> TripController: GET '/trips?src=?,dst=?,rest=...'
TripController -> TripService: Find Trips based on params
TripService -> RouteRepository: SELECT * FROM routes WHERE src=? AND dst=?
RouteRepository -> TripService: Return array of found Routes
TripService -> TripService: For each route: create (if possible) Trip\n based on parameters (without Passenger fields)
TripService -> TripController: Return array of Trips
TripController -> John: Respond 200 with array of Trips
ref over John: Array<TripDto> 
...
John -> TripController: POST '/trips' with body of chosen Trip\n + passengers info
ref over John: BookingRequestDto
TripController -> TripService: Save received Trip
TripService -> TripService: Process Trip
TripService -> TripsRepository: INSERT INTO trips, tickets VALUES (...)
TripService -> TripController: Notify about success or failure
TripController -> John: Respond 200 with TripsId
ref over John: Array<String>
@enduml
